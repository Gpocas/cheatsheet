services :
  postgres:
    container_name: nocarbon_postgres
    image: postgres:17
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./sql/pre_faturamento_6.sql:/docker-entrypoint-initdb.d/fn_calc.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  api:
    image: nocarbon:latest
    container_name: api
    entrypoint: ./entrypoint.sh
    build:
      context: .
      dockerfile: multistage.Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - EMAIL_SERVER=${EMAIL_SERVER}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REPO_FILE_USER=${REPO_FILE_USER}
      - REPO_FILE_PASSWORD=${REPO_FILE_PASSWORD}
      - REPO_FILE_RESOURCE=${REPO_FILE_RESOURCE}

    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  celery_worker:
    image: nocarbon:latest
    container_name: celery_worker
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - EMAIL_SERVER=${EMAIL_SERVER}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REPO_FILE_USER=${REPO_FILE_USER}
      - REPO_FILE_PASSWORD=${REPO_FILE_PASSWORD}
      - REPO_FILE_RESOURCE=${REPO_FILE_RESOURCE}


    command: celery -A jobs.celery worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy


  nginx:
    image: nginx:1.27
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - nginx
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    entrypoint: ["sleep", "infinity"]

volumes:
  pg-data:
  redis_data:
